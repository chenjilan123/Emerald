using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Pets.Data.Model;

namespace Pets.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class StatusController : ControllerBase
    {
        [HttpGet("{status}", Name = "GetStatus")]
        //Provide status descriptions for swagger
        //This attribute produces more descriptive response details for API help pages generated by tools like Swagger.
        [ProducesResponseType(200)]//, Type = typeof(Cat))]
        [ProducesResponseType(201)]//, Type = typeof(Cat))] //ActionResult<Cat> auto specific Type
        [ProducesResponseType(202)]
        [ProducesResponseType(400)]
        [ProducesResponseType(404)]
        //Implicit cast operators support the conversion of both T and ActionResult to ActionResult<T>. 
        //T converts to ObjectResult, which means return new ObjectResult(T); is simplified to return T;
        //public ActionResult<Cat> Get([FromRoute]Status status) //Without ApiController attribute
        public ActionResult<Cat> Get(Status status)
        {
            switch (status)
            {
                case Status.OK:
                    //return Ok();
                    return new Cat() { Name = "Cate", Gender = Gender.Female };
                    // Equals to
                    //return Ok(new Cat() { Name = "Cate", Gender = Gender.Female });
                case Status.Created:
                    return CreatedAtAction(nameof(GetDemo), new Cat() { Name = "Cate", Gender = Gender.Female });
                case Status.Accepted:
                    return Accepted();
                case Status.NotFound:
                    return NotFound();
                case Status.BadRequest:
                default:
                    return BadRequest();
            }
            //return new Cat();
            //return new ObjectResult(new Cat());
        }

        [HttpGet]
        public ActionResult<Cat> GetDemo()
        {
            return new Cat() { Name = "Cate", Gender = Gender.Female };
        }

        //length=24，the request string length should be 24, or it will return 404 not found.
        [HttpGet("GetOK/{status:length(24)}", Name = "GetOK")]
        public IActionResult GetOK(string status)
        {
            return Ok();
        }
    }
}